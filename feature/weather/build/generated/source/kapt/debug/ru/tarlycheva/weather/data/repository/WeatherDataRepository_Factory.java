// Generated by Dagger (https://dagger.dev).
package ru.tarlycheva.weather.data.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.tarlycheva.weather.domain.api.WeatherService;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherDataRepository_Factory implements Factory<WeatherDataRepository> {
  private final Provider<WeatherService> apiProvider;

  public WeatherDataRepository_Factory(Provider<WeatherService> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public WeatherDataRepository get() {
    return newInstance(apiProvider.get());
  }

  public static WeatherDataRepository_Factory create(Provider<WeatherService> apiProvider) {
    return new WeatherDataRepository_Factory(apiProvider);
  }

  public static WeatherDataRepository newInstance(WeatherService api) {
    return new WeatherDataRepository(api);
  }
}
